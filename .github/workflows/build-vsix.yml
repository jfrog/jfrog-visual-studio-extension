name: Build VSIX

on:
  workflow_call:  
    inputs:
       ref:
        required: true
        type: string
 
jobs:
  build:
    runs-on: windows-latest
    
    env:
        # jfrog cli version can be changed here
        JFROG_CLI_VERSION: '2.71.3'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.11'

    # caching NuGet packages for optimizing the build process
    - name: Cache NuGet packages 
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: nuget-${{ runner.os }}-
          
    - name: Restore dependencies
      run: |
        dotnet restore
        nuget restore

    - name: Download JFrog CLI executable 
      run: |
        .\scripts\DownloadJfrogCli.ps1
      shell: pwsh

    # build the vsix project using multi-core compilation and parallel builds
    - name: Build VSIX Project 
      run: msbuild JFrogVSExtension.sln /p:Configuration=Release /p:Platform="Any CPU" /p:BuildInParallel=true /m 

    # Verify that the PDB file is not included in the .vsix file, this will expose unwanted debug information about the development env
    - name: Check for PDB in VSIX
      run: |
        .\scripts\ValidatePDBFilesAbsenceInReleaseMode.ps1
      shell: pwsh

    # Upload vsix and unit test as artifacts for other workflows usage
    - name: Upload vsix artifacts
      uses: actions/upload-artifact@v3
      with:
        name: vsix-artifacts
        path: "JFrogVSExtension/bin/Release/"

    - name: Upload tests artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tests-artifacts
        path: "UnitTestJfrogVSExtension/bin/Release/"